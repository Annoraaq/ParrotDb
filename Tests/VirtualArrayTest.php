<?php
namespace ParrotDb\Core;

use ParrotDb\Datastructures\NaturalTree;
use ParrotDb\Datastructures\VirtualArray;
use \ParrotDb\ObjectModel\PObjectId;
use \ParrotDb\Query\LotB\Parser\Parser;

require_once  dirname(__FILE__) . "/testclasses/Author.php";
require_once  dirname(__FILE__) . "/testclasses/TestRec.php";
require_once  dirname(__FILE__) . "/testclasses/Publication.php";
require_once  dirname(__FILE__) . "/testclasses/StaticStub.php";
require_once  dirname(__FILE__) . "/testclasses/PrivateConstructor.php";


/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-08-18 at 17:07:28.
 */
class VirtualArrayTest  extends \PHPUnit_Framework_TestCase
{
    
     /**
     * @var PPersistanceManager
     */
    protected $pm;
    
    protected $session;
    

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {

        if (file_exists(dirname(__FILE__) . "/test.file")) {
            unlink(dirname(__FILE__) . "/test.file");
        }



    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        if (file_exists(dirname(__FILE__) . "/test.file")) {
            unlink(dirname(__FILE__) . "/test.file");
        }
    }
    


    public function testArray() {


        $arr = new VirtualArray("test.file");
        $arr->open();
        $arr->put(1, "5");
        $arr->put(3, "9");
        $arr->put(6, "0");

        $this->assertEquals("5", trim($arr->access(1)));
        $this->assertEquals("9", trim($arr->access(3)));

        $this->assertFalse($arr->access(2));
        $this->assertEquals("0", trim($arr->access(6)));
        $this->assertFalse(false === $arr->access(6));

        $this->assertFalse(false === $arr->access(3));
        $arr->remove(3);
        $this->assertFalse($arr->access(3));


        $arr->close();
    }


}
